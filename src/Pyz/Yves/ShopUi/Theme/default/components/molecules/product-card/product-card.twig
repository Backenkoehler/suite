{#
this is a real working example of an extend component

the goal here is to change a component implementation
whenever this component is used, the new implementation will be used
#}

{#
forst of all, to extend a component in twig is necessary to replicate the exact folder structure
that we have in spryker-shop ShopUi module
this way, the twig loader will pick this teplate intead of the default one

right now, to extend a component twig file, you need to own the code, that means copy the original code
(just for twig) and paste it here
#}
{% extends molecule('card') %}

{% define config = {
    name: 'product-card',
    tag: 'article'
} %}

{% define data = {
    name: required,
    abstractId: required,
    url: required,
    imageUrl: required,
    price: required,
    originalPrice: null
} %}

{#
this product-card code is the same as the original one, except for this following image
#}
{% block image %}
    <a href="{{data.url}}">
        {% include atom('thumbnail') with {
            class: 'js-product-color-group__image-' ~ data.abstractId,
            attributes: {
                alt: data.name,
                src: data.imageUrl,
                title: data.name
            }
        } only %}
    </a>
{% endblock %}

{% block content %}
    {% block labels %}
        {{ widget('ProductAbstractLabelWidgetPlugin', data.abstractId) }}
    {% endblock %}

    {% block groups %}
        {{ widget('ProductGroupWidgetPlugin', data.abstractId) }}
    {% endblock %}

    {% block name %}
        <strong>{{data.name}}</strong>
    {% endblock %}

    {% block rating %}
        {{ widget('ProductAbstractReviewWidgetPlugin', data.abstractId) }}
    {% endblock %}

    {% block price %}
        <p>
            {% include molecule('price') with {
                data: {
                    amount: data.price | money,
                    originalAmount: data.originalPrice is empty ? null : (data.originalPrice | money)
                }
            } only %}
        </p>
    {% endblock %}
{% endblock %}
